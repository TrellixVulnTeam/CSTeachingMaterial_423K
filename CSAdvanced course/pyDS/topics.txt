1. OOP - Explain concepts
2. TDD an unit testing
3. Stack and paranthesis check example
4. Explain call stack during recursion and plain function call. We will do the call stack activity.
5.Recursion and dynamic programming and how call stack is used here.
Start with fibonacci and factorial and stadium activity and go through all three implemntations of pascal's with dynamic programming
6. Explain queues and usage verbally
Explain trees formed during recursion
7.Pre, in and post order traversals and the shunting yard algorithm and evaluate math expressions and flaws doing it this way.
8,9,10. How does computer evaluate math expressions
FSM activity and BNF form and traffic light example
Convert math expr to fsm and ebnf and to code

Write Lexer, Parser, Interpreter and Visualizer

Concepts: Trees, stack, queue, pre, post and inorder and breadth first traversal


Post this the plan:
7. backtracking with multiple ways to solve the anagram and come to backtracking and hashing as examples.

Hashing - Bitcoins using Merkle puzzles and Backtracking - 8 queens as food for thought

Concepts: 
Order of algorithms for different solutions for anagram and how it gets better or worse
Backtracking 
Hashing

8. Graphs and word ladder
9. Huffman encoding
10.Tries and word search and bloom filter
11. AI 

Nim and Tic tac toe
class and instance attributes
https://www.python-course.eu/python3_class_and_instance_attributes.php